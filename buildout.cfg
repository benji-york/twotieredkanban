[buildout]
parts = app py js-build test

develop = . ../newt/db
# show-picked-versions = true
# update-versions-file = versions.cfg
extends = versions.cfg
relative-paths = true

[versions]
zc.buildout =
setuptools =

[ports]
app = 8000

[test]
recipe = zc.recipe.testrunner
eggs = zc.twotieredkanban [test]

[js-build]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
  npm install
  grunt coffee

[zdaemon]
recipe = zc.recipe.egg
eggs = zdaemon

[wsgirunner]
recipe = zc.recipe.egg
eggs =
  zc.twotieredkanban
  zc.zodbwsgi
  zc.wsgirunner
  Paste
  newt.db

[py]
recipe = zc.recipe.egg
eggs = ${wsgirunner:eggs}
interpreter = py

[dbclient]
recipe = zc.recipe.deployment:configuration
name = ${buildout:directory}/db.cfg
dsn = postgresql://pycharm.ch7ekuuhvcex.us-east-1.rds.amazonaws.com/otasks
text =
  %import newt.db

    <newtdb>
      <zodb>
        <relstorage>
          keep-history false
          <newt>
            <postgresql>
              dsn ${:dsn}
            </postgresql>
          </newt>
        </relstorage>
      </zodb>
    </newtdb>

[paste.ini]
recipe = zc.recipe.deployment:configuration
static = ${buildout:directory}/static
client = ${buildout:directory}/client
databases =
   configuration =
     %${dbclient:text}
text =
  [pipeline:main]
  pipeline = lint zodb reload kanban

  [app:kanban]
  use = egg:bobo
  bobo_resources = boboserver:static('/static', '${:static}')
                   boboserver:static('/client', '${:client}')
                   zc.twotieredkanban.apibase

  bobo_configure = zc.twotieredkanban.apibase:config
                   zc.twotieredkanban.email:config

  bobo_handle_exceptions = false

  dsn = ${dbclient:dsn}
  
  [filter:reload]
  use = egg:bobo#reload
  modules = zc.twotieredkanban

  [filter:zodb]
  use = egg:zc.zodbwsgi
  ${:databases}
  max_connections = 4
  thread_transaction_manager = False
  initializer = zc.twotieredkanban.apibase:initialize_database('jim@zope.com')
  
  [filter:lint]
  use = egg:Paste#lint

  [filter:error]
  use = egg:Paste#error_catcher

  [server:main]
  use = egg:zc.twotieredkanban
  port = ${ports:app}

  [logging:main]
  level = INFO


[app]
=> wsgirunner
recipe = zc.zdaemonrecipe
b = ${buildout:bin-directory}
p = ${buildout:parts-directory}
program = ${:b}/run-wsgi ${paste.ini:location}
